<?php/*|===========================================================================||	MODELO DE DADOS PARA A TABELA           						        ||===========================================================================||																			||	VERSÃO:								1.0.0								||	 																		|	|===========================================================================|*/	Class emprestimosModel extends Model {		public $_tabela = "emprestimos";	//	ATRIBUTO PARA SETAR QUAL A TABELA QUE ESTÁ EM USO		private $_usuarios; 		private $_livros;	# -------------------------------------------------------------------------------		# INICIALIZANDO OS RELACIONAMENTOS NESTE MODELO		# -------------------------------------------------------------------------------				private function relacionamentos() {			$this->_usuarios = new usuariosModel();				$this->_livros = new livrosModel();			}			# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 001: [ PUBLIC FUNCTION LISTA REGISTROS ]	# ESTE METODO É RETORNA TODOS OS REGISTROS DO BANCO DE DADOS	# ---------------------------------------------------------------------------------------------------------------------------------				public function listaemprestimos($condicao = null, $qtd = null, $offset = null,$ordem = "id ASC") {			return $this->read($condicao, $qtd, $offset, $ordem);		}			# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 002: [ PUBLIC FUNCTION MOSTRA REGISTRO ]	# ESTE METODO RETORNA UM ÚNICO REGISTRO	# ---------------------------------------------------------------------------------------------------------------------------------						public function emprestimosShow($where) {			return $this->read($where, null, null, 'id ASC');		}		# ---------------------------------------------------------------------------------------------------------------------------------		# METODO DE VALIDACAO DE DADOS: parametro formulario	# ---------------------------------------------------------------------------------------------------------------------------------			public function ValidaDados($form,$campos,$tipo) {			global $start;						$this->relacionamentos();	//	instancia todos os modelos que serão usados nos relacionamentos						// criando as sessoes para recuperar os dados do usuario:			for ($ct=0;$ct<count($campos);$ct++){				// EVITANDO SQL_INJECTION:				if (isset($_POST[$campos[$ct]]) ) {					$_POST[$campos[$ct]] = $start->NoSqlInject($_POST[$campos[$ct]]);				}					$_SESSION[$campos[$ct]] = (isset($_POST[$campos[$ct]]) ? $_POST[$campos[$ct]] : "");			}				$_SESSION['posic_erro'] = 0;	//	Ponteiro para gerenciar erros na validacao						// validando Data EMPRESTIMO:			$this->VerErro(  $this->ValidarData('data do emprestimo',$_POST['dtemprestimo'], null, null, null) ) ;			// validando Data DEVOLUCAO:			$this->VerErro(  $this->ValidarData('data da devolucao',$_POST['dtdevolucao'], $_POST['dtemprestimo'], null, null) ) ;			// validando Data DE ENTREGA DO LIVRO:			if ($tipo == '2') {	//	valida somente na alteracao				$this->VerErro(  $this->ValidarData('data de entrega',$_POST['devolvidodia'], $_POST['dtemprestimo'], null, null) ) ;			}							// Verificando se o usuario é bloqueado:			$ficha = $this->_usuarios->listausuarios("id=".$_POST['usuario_id']);			if ($ficha[0]['bloqueado'] == "S") {	//	valida somente na alteracao				$this->VerErro("O USUARIO [".strtoupper($ficha[0]['nome'])."] ESTA BLOQUEADO!!!");			}			// Verificando se o usuario já pegou o mesmo livro			if ($tipo == "1") {				$cond = "usuario_id = ".$_POST['usuario_id'] . " and livro_id = ". $_POST['livro_id'];				$ficha = $this->listaemprestimos($cond,null,null,'devolvidodia ASC');				for ($ct=0;$ct<count($ficha);$ct++){					if ($ficha[$ct]['devolvidodia'] == "0000-00-00") {						$this->VerErro("ESTE USUARIO JA ESTA COM ESTE LIVRO!!!");						break;					}					}			}					// Verificando se existe um exemplar disponível:			$ficha = $this->_livros->listalivros("id=".$_POST['livro_id']);			if ($ficha[0]['exemplar_dispo'] == 0 and $tipo == "1") {				$this->VerErro("O LIVRO [".strtoupper($ficha[0]['titulo'])."] ESTA SEM NENHUM EXEMPLAR DISPONIVEL NESTE MOMENTO!");			}						// RETORNO DE ERROS:			if ( isset($_SESSION["ERRO0"]) ) {	//	se existe ao menos um erro...				return array('1');	//	retorna o vetor de erros...					} else {				return array();		//	retorna o vetor de erros...								}			}			} // fim de classe?>